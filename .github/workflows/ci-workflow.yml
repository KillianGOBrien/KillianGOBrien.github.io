name: CI workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Fix GitHub Ownership Issue
      run: git config --global --add safe.directory /github/workspace
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1  # Updated from 2.6 to 3.1

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    
    - name: Install dependencies
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    
    - name: Build test sites
      run: |
        bundle exec jekyll build --config _test/_config-version-1.yml --destination ./_test-site-1
        bundle exec jekyll build --config _test/_config-version-2.yml --destination ./_test-site-2
    
    - name: Run tests
      run: |
        bundle exec htmlproofer ./_test-site-1 --disable-external
        bundle exec htmlproofer ./_test-site-2 --disable-external

  ci-skip:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@v1
        with:
          commit-filter: '[skip ci]'

  bump-version-deploy:
    name: Bump Version and Deploy
    runs-on: ubuntu-latest
    needs: [ build-test, ci-skip ]
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'sproogen' && needs.ci-skip.outputs.skip == 'false'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.ADMIN_TOKEN }}
    
    - name: Fix GitHub Ownership Issue
      run: git config --global --add safe.directory /github/workspace

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1  # Updated from 2.6 to 3.1

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install dependencies
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Install gem-release
      run: gem install gem-release

    - name: Set git config
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Initialize workflow variables
      id: vars
      run: |
        CURRENT_VERSION=$(gem bump --pretend --no-commit | awk '{ print $3 }')
        echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
        unset HAS_TAG
        if [ -n "$(git tag -l v$CURRENT_VERSION)" ]; then HAS_TAG='true'; fi
        echo "HAS_TAG=${HAS_TAG}" >> $GITHUB_ENV

    - name: Bump version if not manually bumped
      if: env.HAS_TAG == ''
      run: |
        gem bump --skip-ci
        NEW_VERSION=$(gem bump --pretend --no-commit | awk '{ print $3 }')
        sed -i -e "s/modern-resume-theme ($CURRENT_VERSION)/modern-resume-theme (${NEW_VERSION})/g" ./Gemfile.lock
        git add Gemfile.lock
        git commit --amend --no-edit

    - name: Tag latest version
      run: gem tag --no-push

    - run: git push origin HEAD:${{ github.ref }} --tags

    - name: Build Gem
      run: gem build modern-resume-theme.gemspec

    - name: Get Release Version
      id: release_version
      run: |
        RELEASE_VERSION=$(gem bump --pretend --no-commit | awk '{ print $3 }')
        echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.RELEASE_VERSION }}
        release_name: v${{_
